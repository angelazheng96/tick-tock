---
import "../styles/global.css";

import Layout from "../components/Layout.astro";
---

<Layout title="Timer">
  <div
    class="h-screen flex flex-col items-center justify-center font-['Fira'] bg-light text-dark"
  >
    <h1 class="text-eggplant text-2xl sm:text-3xl md:text-4xl mb-4">Timer</h1>
    <div class="text-sm text-rose">
      <span id="hoverText" class="italic">Tick, tock...</span>
      <audio src="/audio/slow-clock-ticking.mp3" id="hoverAudio" preload="auto"
      ></audio>
      <a href="./" class="hover:text-lilac hover:underline">go back home!</a>
    </div>

    <div class="my-10 text-6xl sm:text-8xl md:text-9xl text-center flex gap-0">
      <input
        id="hours"
        type="number"
        value="00"
        onfocus="this.select()"
        onblur="setTime(getTimerInput())"
        onkeydown="if (event.key === '-' || event.key === '+' || event.key === '.' || event.key === 'e') event.preventDefault();"
        inputmode="numeric"
        maxlength="2"
        class="w-[2ch]
          [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none"
      />
      <span class="">:</span>
      <input
        id="minutes"
        type="number"
        value="00"
        onfocus="this.select()"
        onblur="setTime(getTimerInput())"
        onkeydown="if (event.key === '-' || event.key === '+' || event.key === '.' || event.key === 'e') event.preventDefault();"
        inputmode="numeric"
        maxlength="2"
        class="w-[2ch]
          [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none"
      />
      <span>:</span>
      <input
        id="seconds"
        type="number"
        value="00"
        onfocus="this.select()"
        onblur="setTime(getTimerInput())"
        onkeydown="if (event.key === '-' || event.key === '+' || event.key === '.' || event.key === 'e') event.preventDefault();"
        inputmode="numeric"
        maxlength="2"
        class="w-[2ch]
          [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none"
      />
    </div>

    <div>
      <button
        id="startPause"
        class="p-2 w-20 h-10 bg-rose rounded-xl border-pink border-2
          hover:bg-pink hover:border-rose hover:cursor-pointer
          active:bg-pink active:border-eggplant"
        >Start</button
      >
      <button
        id="reset"
        class="p-2 w-20 h-10 bg-rose rounded-xl border-pink border-2
          hover:bg-pink hover:border-rose hover:cursor-pointer
          active:bg-pink active:border-eggplant"
        >Reset</button
      >
    </div>
  </div>
</Layout>

<script is:inline>
  const hoursInput = document.getElementById("hours");
  const minutesInput = document.getElementById("minutes");
  const secondsInput = document.getElementById("seconds");

  const startPauseBtn = document.getElementById("startPause");
  const resetBtn = document.getElementById("reset");

  let timerRunning = false;
  let timerInput;
  let timerInterval;
  let timeElapsed, currentTime, startTime;

  // Start or pause timer
  startPauseBtn?.addEventListener("click", toggleTimer);

  // Toggle timer state
  function toggleTimer() {
    timerRunning = !timerRunning;

    // If timer has been started
    if (timerRunning) {
      timerInput = getTimerInput();
      console.log(timerInput);

      // Get current time
      timeElapsed = 0;
      currentTime = Date.now();
      startTime = currentTime;

      startPauseBtn.textContent = "Pause";

      // Update timer every 0.2 seconds
      timerInterval = setInterval(() => {
        updateTimer();
      }, 200);
    }

    // If timer has been paused
    else {
      clearInterval(timerInterval);
      startPauseBtn.textContent = "Resume";
    }
  }

  // Takes user input and converts into seconds
  function getTimerInput() {
    return (
      Number(hoursInput.value) * 3600 +
      Number(minutesInput.value) * 60 +
      Number(secondsInput.value)
    );
  }

  // Puts the time argument (given in seconds) into the time element as HH:MM:SS
  function setTime(time) {
    hoursInput.value = String(Math.floor(time / 3600)).padStart(2, "0");
    minutesInput.value = String(Math.floor((time % 3600) / 60)).padStart(
      2,
      "0",
    );
    secondsInput.value = String(time % 60).padStart(2, "0");
  }

  // Updates timer
  function updateTimer() {
    // Compare current time to the timer start time
    currentTime = Date.now();

    // Time elapsed since start, in seconds
    timeElapsed = Number(Math.floor((currentTime - startTime) / 1000));

    // Update timer value
    setTime(Number(timerInput - timeElapsed));
  }

  // Play clock ticking sound when hovering over "Tick, tock..."
  const hoverAudio = document.getElementById("hoverAudio");
  const hoverText = document.getElementById("hoverText");

  hoverText.addEventListener("mouseover", () => {
    console.log("mouse over");
    hoverAudio.currentTime = 0;
    hoverAudio.play();
  });

  hoverText.addEventListener("mouseout", () => {
    console.log("mouse out");
    hoverAudio.pause();
    hoverAudio.currentTime = 0;
  });
</script>
